/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from 'ng2-charts/components/charts/charts';
import * as import2 from '@angular/core/src/di/injector';
import * as import3 from '@angular/core/src/render/api';
import * as import4 from '@angular/core/src/linker/view';
import * as import5 from '@angular/core/src/linker/element';
import * as import6 from '@angular/core/src/linker/view_utils';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/change_detection/change_detection';
import * as import9 from '@angular/core/src/linker/element_ref';
import * as import10 from '@angular/core/src/metadata/view';
import * as import11 from '@angular/core/src/linker/component_factory';
class ChartsModuleInjector extends import0.NgModuleInjector<import1.ChartsModule> {
  _ChartsModule_0:import1.ChartsModule;
  constructor(parent:import2.Injector) {
    super(parent,[],[]);
  }
  createInternal():import1.ChartsModule {
    this._ChartsModule_0 = new import1.ChartsModule();
    return this._ChartsModule_0;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import1.ChartsModule)) { return this._ChartsModule_0; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const ChartsModuleNgFactory:import0.NgModuleFactory<import1.ChartsModule> = new import0.NgModuleFactory(ChartsModuleInjector,import1.ChartsModule);
var renderType_BaseChartComponent_Host:import3.RenderComponentType = (null as any);
class _View_BaseChartComponent_Host0 extends import4.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import5.AppElement;
  _BaseChartComponent_0_4:import1.BaseChartComponent;
  constructor(viewUtils:import6.ViewUtils,parentInjector:import2.Injector,declarationEl:import5.AppElement) {
    super(_View_BaseChartComponent_Host0,renderType_BaseChartComponent_Host,import7.ViewType.HOST,viewUtils,parentInjector,declarationEl,import8.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._el_0 = this.selectOrCreateHostElement('base-chart',rootSelector,(null as any));
    this._appEl_0 = new import5.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_BaseChartComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._BaseChartComponent_0_4 = new import1.BaseChartComponent(new import9.ElementRef(this._el_0));
    this._appEl_0.initComponent(this._BaseChartComponent_0_4,[],compView_0);
    compView_0.create(this._BaseChartComponent_0_4,this.projectableNodes,(null as any));
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import1.BaseChartComponent) && (0 === requestNodeIndex))) { return this._BaseChartComponent_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (((this.numberOfChecks === 0) && !throwOnChange)) { this._BaseChartComponent_0_4.ngOnInit(); }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
  destroyInternal():void {
    this._BaseChartComponent_0_4.ngOnDestroy();
  }
}
function viewFactory_BaseChartComponent_Host0(viewUtils:import6.ViewUtils,parentInjector:import2.Injector,declarationEl:import5.AppElement):import4.AppView<any> {
  if ((renderType_BaseChartComponent_Host === (null as any))) { (renderType_BaseChartComponent_Host = viewUtils.createRenderComponentType('',0,import10.ViewEncapsulation.None,[],{})); }
  return new _View_BaseChartComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const BaseChartComponentNgFactory:import11.ComponentFactory<import1.BaseChartComponent> = new import11.ComponentFactory<import1.BaseChartComponent>('base-chart',viewFactory_BaseChartComponent_Host0,import1.BaseChartComponent);
const styles_BaseChartComponent:any[] = ['[_nghost-%COMP%] { display: block; }'];
var renderType_BaseChartComponent:import3.RenderComponentType = (null as any);
class _View_BaseChartComponent0 extends import4.AppView<import1.BaseChartComponent> {
  _el_0:any;
  constructor(viewUtils:import6.ViewUtils,parentInjector:import2.Injector,declarationEl:import5.AppElement) {
    super(_View_BaseChartComponent0,renderType_BaseChartComponent,import7.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import8.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import5.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._el_0 = this.renderer.createElement(parentRenderNode,'canvas',(null as any));
    this.renderer.setElementAttribute(this._el_0,'style','width: 100%; height: 100%;');
    this.init([],[this._el_0],[],[]);
    return (null as any);
  }
}
export function viewFactory_BaseChartComponent0(viewUtils:import6.ViewUtils,parentInjector:import2.Injector,declarationEl:import5.AppElement):import4.AppView<import1.BaseChartComponent> {
  if ((renderType_BaseChartComponent === (null as any))) { (renderType_BaseChartComponent = viewUtils.createRenderComponentType('/Users/paulo/Documents/workspaces/go/src/github.com/prsolucoes/goci/web-app/node_modules/ng2-charts/components/charts/charts.d.ts class BaseChartComponent - inline template',0,import10.ViewEncapsulation.Emulated,styles_BaseChartComponent,{})); }
  return new _View_BaseChartComponent0(viewUtils,parentInjector,declarationEl);
}